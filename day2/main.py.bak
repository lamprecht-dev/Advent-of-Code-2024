import sys
import functools
sys.path.append('../')
from utils import *

def is_good(i):
    pos_count = 0
    neg_count = 0
    is_good = True
    for ii in range(len(i)):
        if (ii == 0):
            continue
        di = i[ii] - i[ii - 1]
        if di < 0:
            neg_count += 1
        elif di > 0:
            pos_count += 1
        if abs(di) > 3 or di == 0:
            return False

    if(pos_count > 0 and neg_count > 0):
        return False
    return True



def s(d, part):
    ll = lines(d)
    count_good = 0
    for line in ll:
        i = ints(line)
        if part == 1:
            count_good += is_good(i)
        else:
            is_any_good = False
            if is_good(i):
                count_good += 1
                continue
            for ii in range(len(i)):
                inew = [i[j] for j in range(len(i)) if j != ii]
                if is_good(inew):
                    is_any_good = True
                    break
            if is_any_good:
                count_good += 1

    return count_good


def main():
    if test():
        file = inp(os.path.join(os.path.dirname(__file__), 'input.txt'))
        solutions = (s(file, 1), s(file, 2))
        print("\n\n" + BColors.HEADER + "Solutions" + BColors.ENDC)
        for sol in solutions:
            print(sol)
    else:
        print("\n\n" + BColors.FAIL + "Not All Test Successful" + BColors.ENDC)


def test():
    example = """7 6 4 2 1
1 2 7 8 9
9 7 6 2 1
1 3 2 4 5
8 6 4 4 1
1 3 6 7 9"""
    a1 = 2
    a2 = 4
    return validate_solution((s(example, 1), s(example, 2)), (a1, a2))


main()
